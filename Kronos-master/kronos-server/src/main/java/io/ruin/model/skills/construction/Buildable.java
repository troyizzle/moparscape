package io.ruin.model.skills.construction;

import io.ruin.api.utils.NumberUtils;
import io.ruin.cache.AnimDef;
import io.ruin.cache.ItemDef;
import io.ruin.model.activities.raids.xeric.ChambersOfXeric;
import io.ruin.model.activities.raids.xeric.RaidStorage;
import io.ruin.model.entity.player.Player;
import io.ruin.model.inter.Interface;
import io.ruin.model.inter.InterfaceHandler;
import io.ruin.model.inter.InterfaceType;
import io.ruin.model.inter.actions.SlotAction;
import io.ruin.model.inter.dialogue.MessageDialogue;
import io.ruin.model.item.Item;
import io.ruin.model.skills.Tool;
import io.ruin.model.skills.construction.room.Room;
import io.ruin.model.skills.herblore.Potion;
import io.ruin.model.skills.magic.rune.Rune;
import io.ruin.model.stat.StatType;

import java.util.Arrays;
import java.util.List;
import java.util.function.BiPredicate;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import static io.ruin.model.skills.construction.Construction.*;
import static io.ruin.model.skills.construction.Material.*;

/**
 * yes i filled all of these in myself
 * @author Edu
 */
public enum Buildable {
    /*
     * Garden
     */
    EXIT_PORTAL(1, 100, MID_BUILD, 8168, 4525, STEEL_BAR.item(10)),
    DECORATIVE_ROCK(5, 100, MID_BUILD, 8169, 4526, LIMESTONE_BRICK.item(5)),
    POND(10, 100, MID_BUILD, 8170, 4527, SOFT_CLAY.item(5)),
    IMP_STATUE(15, 150, MID_BUILD, 8171, 4528, LIMESTONE_BRICK.item(5), SOFT_CLAY.item(5)),
    DUNGEON_ENTRANCE(70, 500, MID_BUILD, 8172, 4529, MARBLE_BLOCK.item(1)),

    BIG_DEAD_TREE(5, 31, GROUND_PLANT, 8173, 4531, new Item(8417)),
    BIG_NICE_TREE(10, 44, GROUND_PLANT, 8174, 4532, new Item(8419)),
    BIG_OAK_TREE(15, 70, GROUND_PLANT, 8175, 4533, new Item(8421)),
    BIG_WILLOW_TREE(30, 100, GROUND_PLANT, 8176, 4534, new Item(8423)),
    BIG_MAPLE_TREE(45, 122, GROUND_PLANT, 8177, 4535, new Item(8425)),
    BIG_YEW_TREE(60, 141, GROUND_PLANT, 8178, 4536, new Item(8427)),
    BIG_MAGIC_TREE(75, 223, GROUND_PLANT, 8179, 4537, new Item(8429)),

    SMALL_DEAD_TREE(5, 31, GROUND_PLANT, 8173, 4538, new Item(8417)),
    SMALL_NICE_TREE(10, 44, GROUND_PLANT, 8174, 4539, new Item(8419)),
    SMALL_OAK_TREE(15, 70, GROUND_PLANT, 8175, 4540, new Item(8421)),
    SMALL_WILLOW_TREE(30, 100, GROUND_PLANT, 8176, 4541, new Item(8423)),
    SMALL_MAPLE_TREE(45, 122, GROUND_PLANT, 8177, 5126, new Item(8425)),
    SMALL_YEW_TREE(60, 141, GROUND_PLANT, 8178, 5121, new Item(8427)),
    SMALL_MAGIC_TREE(75, 223, GROUND_PLANT, 8179, 5127, new Item(8429)),

    FERN(1, 31, GROUND_PLANT, 8182, 5136, new Item(8431)),
    BUSH(6, 70, GROUND_PLANT, 8187, 5129, new Item(8433)),
    TALL_PLANT(12, 100, GROUND_PLANT, 8188, 5130, new Item(8435)),

    SHORT_PLANT(1, 31, GROUND_PLANT, 8189, 5131, new Item(8431)),
    LARGE_LEAF_BUSH(6, 70, GROUND_PLANT, 8190, 5132, new Item(8433)),
    HUGE_PLANT(12, 100, GROUND_PLANT, 8191, 5133, new Item(8435)),

    PLANT(1, 31, GROUND_PLANT, 8180, 5134, new Item(8431)),
    SMALLER_FERN(6, 70, GROUND_PLANT, 8181, 5135, new Item(8433)),
    SMALL_FERN(12, 100, GROUND_PLANT, 8182, 5136, new Item(8435)),

    DOCK_LEAF(1, 31, GROUND_PLANT, 8183, 5137, new Item(8431)),
    THISTLE(6, 70, GROUND_PLANT, 8184, 5138, new Item(8433)),
    REEDS(12, 100, GROUND_PLANT, 8185, 5139, new Item(8435)),

    TIP_JAR(40, 651, MID_BUILD, 20634, 29146, MAHOGANY_PLANK.item(2), MOLTEN_GLASS.item(1), GOLD_LEAF.item(1), PLATINUM_TOKEN.item(5)),

    /*
     * Parlour
     */
    CRUDE_WOODEN_CHAIR(1, 58.0, MID_BUILD, 8309, 6752, REGULAR_PLANK.item(2), NAILS.item(2)),
    WOODEN_CHAIR(8, 87, MID_BUILD, 8310, 6753, REGULAR_PLANK.item(3), NAILS.item(3)),
    ROCKING_CHAIR(14, 87, MID_BUILD, 8311, 6754, REGULAR_PLANK.item(3), NAILS.item(3)),
    OAK_CHAIR(19, 120, MID_BUILD, 8312, 6755, OAK_PLANK.item(2)),
    OAK_ARMCHAIR(26, 180, MID_BUILD, 8313, 6756, OAK_PLANK.item(3)),
    TEAK_ARMCHAIR(35, 180, MID_BUILD, 8314, 6757, TEAK_PLANK.item(2)),
    MAHOGANY_ARMCHAIR(50, 280, MID_BUILD, 8315, 6758, MAHOGANY_PLANK.item(2)),

    BROWN_RUG(2, 30, LOW_BUILD, 8316, new int[] {6761, 6760, 6759}, BOLT_OF_CLOTH.item(2)),
    RUG(13, 60, LOW_BUILD, 8317, new int[] {6764, 6763, 6762}, BOLT_OF_CLOTH.item(4)),
    OPULENT_RUG(65, 360, LOW_BUILD, 8318, new int[]{6767, 6766, 6765}, BOLT_OF_CLOTH.item(4), GOLD_LEAF.item(1)),

    WOODEN_BOOKCASE(4, 115, MID_BUILD, 8319, 6768, REGULAR_PLANK.item(4), NAILS.item(4)),
    OAK_BOOKCASE(29, 180, MID_BUILD, 8320, 6769, OAK_PLANK.item(3)),
    MAHOGANY_BOOKCASE(40, 420, MID_BUILD, 8321, 6770, MAHOGANY_PLANK.item(3)),

    CLAY_FIREPLACE(3, 30, LOW_BUILD, 8325, 6780, SOFT_CLAY.item(3)),
    STONE_FIREPLACE(33, 40, LOW_BUILD, 8326, 6782, LIMESTONE_BRICK.item(2)),
    MARBLE_FIREPLACE(63, 500, LOW_BUILD, 8327, 6784, MARBLE_BLOCK.item(1)),

    TORN_CURTAINS(2, 132, MID_BUILD, 8322, 6774, REGULAR_PLANK.item(3), BOLT_OF_CLOTH.item(3), NAILS.item(3)),
    CURTAINS(18, 225, MID_BUILD, 8323, 6775, OAK_PLANK.item(3), BOLT_OF_CLOTH.item(3)),
    OPULENT_CURTAINS(40, 315, MID_BUILD, 8324, 6776, TEAK_PLANK.item(3), BOLT_OF_CLOTH.item(3)),

    /*
     * Skill hall objects
     */
    OAK_STAIRCASE_UP(27, 680, MID_BUILD, 8249, new int[]{13497, 13497, -1, -1, -1}, OAK_PLANK.item(10), STEEL_BAR.item(4)),
    OAK_STAIRCASE_DOWN(27, 680, MID_BUILD, 8249, new int[]{13498, 13498, -1, -1, -1}, OAK_PLANK.item(10), STEEL_BAR.item(4)),
    TEAK_STAIRCASE_UP(48, 980, MID_BUILD, 8252, new int[]{13499, 13499, -1, -1, -1}, TEAK_PLANK.item(10), STEEL_BAR.item(4)),
    TEAK_STAIRCASE_DOWN(48, 980, MID_BUILD, 8252, new int[]{13500, 13500, -1, -1, -1}, TEAK_PLANK.item(10), STEEL_BAR.item(4)),
    SPIRAL_STAIRCASE(67, 1040, MID_BUILD, 8258, new int[]{13503, 13503, -1, -1, -1}, TEAK_PLANK.item(10), LIMESTONE_BRICK.item(7)),
    MARBLE_STAIRCASE_UP(82, 3200, MID_BUILD, 8255, new int[]{13501, 13501, -1, -1, -1}, MAHOGANY_PLANK.item(5), MARBLE_BLOCK.item(5)),
    MARBLE_STAIRCASE_DOWN(82, 3200, MID_BUILD, 8255, new int[]{13502, 13502, -1, -1, -1}, MAHOGANY_PLANK.item(5), MARBLE_BLOCK.item(5)),
    MARBLE_SPIRAL_STAIRCASE(97, 4400, MID_BUILD, 8259, new int[]{13505, 13505, -1, -1, -1}, TEAK_PLANK.item(10), MARBLE_BLOCK.item(7)),
    HALL_RUG(13, 60, LOW_BUILD, 8317, new int[] {-1, -1, 6764, 6763, 6762}, BOLT_OF_CLOTH.item(4)),
    HALL_OPULENT_RUG(65, 360, LOW_BUILD, 8318, new int[]{-1,-1, 6767, 6766, 6765}, BOLT_OF_CLOTH.item(4), GOLD_LEAF.item(1)),

    CW_ARMOUR_1(28, 135, MID_BUILD, 8273, 13494, OAK_PLANK.item(2), new Item(4071), new Item(4069), new Item(4070)),
    CW_ARMOUR_2(28, 150, MID_BUILD, 8274, 13495, OAK_PLANK.item(2), new Item(4506), new Item(4505), new Item(4504)),
    CW_ARMOUR_3(28, 165, MID_BUILD, 8275, 13496, OAK_PLANK.item(2), new Item(4511), new Item(4510), new Item(4509)),

    MITHRIL_ARMOUR(28, 135, MID_BUILD, 8270, 13491, OAK_PLANK.item(2), new Item(1159), new Item(1121), new Item(1085)),
    ADAMANTITE_ARMOUR(28, 150, MID_BUILD, 8271, 13492, OAK_PLANK.item(2), new Item(1161), new Item(1123), new Item(1091)),
    RUNITE_ARMOUR(28, 165, MID_BUILD, 8272, 13493, OAK_PLANK.item(2), new Item(1163), new Item(1127), new Item(1093)),

    CRAWLING_HAND(38, 211, MID_BUILD, 8260, 13481, TEAK_PLANK.item(2), new Item(7982)),
    COCKATRICE_HEAD(38, 224, MID_BUILD, 8261, 13482, TEAK_PLANK.item(2), new Item(7983)),
    BASILISK_HEAD(38, 243, MID_BUILD, 8262, 13483, TEAK_PLANK.item(2), new Item(7984)),
    KURASK_HEAD(58, 357, MID_BUILD, 8263, 13484, MAHOGANY_PLANK.item(2), new Item(7985)),
    ABYSSAL_DEMON_HEAD(58, 389, MID_BUILD, 8264, 13485, MAHOGANY_PLANK.item(2), new Item(7986)),
    KBD_HEADS(78, 1103, MID_BUILD, 8265, 13486, MAHOGANY_PLANK.item(2), new Item(7987), GOLD_LEAF.item(2)),
    KALPHITE_QUEEN_HEAD(78, 1103, MID_BUILD, 8266, 13487, MAHOGANY_PLANK.item(2), new Item(7988), GOLD_LEAF.item(2)),
    VORKATH_HEAD(82, 1103, MID_BUILD, 21912, 31977, MAHOGANY_PLANK.item(2), new Item(21909), GOLD_LEAF.item(2)),

    RUNE_CASE_1(41, 190, MID_BUILD, 8276, 13507, TEAK_PLANK.item(2), MOLTEN_GLASS.item(2), Rune.EARTH.toItem(1), Rune.AIR.toItem(1), Rune.FIRE.toItem(1), Rune.WATER.toItem(1)),
    RUNE_CASE_2(41, 212, MID_BUILD, 8277, 13508, TEAK_PLANK.item(2), MOLTEN_GLASS.item(2), Rune.BODY.toItem(1), Rune.CHAOS.toItem(1), Rune.COSMIC.toItem(1), Rune.NATURE.toItem(1)),
    RUNE_CASE_3(41, 247, MID_BUILD, 8278, 13509, TEAK_PLANK.item(2), MOLTEN_GLASS.item(2), Rune.LAW.toItem(1), Rune.DEATH.toItem(1), Rune.BLOOD.toItem(1), Rune.SOUL.toItem(1)),

    MOUNTED_BASS(36, 151, MID_BUILD, 8267, 13488, OAK_PLANK.item(2), new Item(7990)),
    MOUNTED_SWORDFISH(36, 151, MID_BUILD, 8268, 13489, TEAK_PLANK.item(2), new Item(7992)),
    MOUNTED_SHARK(36, 151, MID_BUILD, 8269, 13490, MAHOGANY_PLANK.item(2), new Item(7994)),

    /*
     * Kitchen
     */
    FIREPIT(5, 40, LOW_BUILD, 8216, 13528, STEEL_BAR.item(1), SOFT_CLAY.item(2)),
    FIREPIT_WITH_HOOK(11, 60, LOW_BUILD, 8217, 13529, STEEL_BAR.item(2), SOFT_CLAY.item(2)),
    FIREPIT_WITH_POT(17, 80, LOW_BUILD, 8218, 13531, STEEL_BAR.item(3), SOFT_CLAY.item(2)),
    SMALL_OVEN(24, 80, MID_BUILD, 8219, 13533, STEEL_BAR.item(4)),
    LARGE_OVEN(29, 100, MID_BUILD, 8220, 13536, STEEL_BAR.item(5)),
    STEEL_RANGE(34, 120, MID_BUILD, 8221, 13539, STEEL_BAR.item(6)),
    FANCY_RANGE(42, 160, MID_BUILD, 8222, 13542, STEEL_BAR.item(8)),

    WOODEN_SHELVES_1(6, 87, HIGH_BUILD, 8223, new int[]{13545, 13552}, REGULAR_PLANK.item(3), NAILS.item(3)),
    WOODEN_SHELVES_2(12, 147, HIGH_BUILD, 8224, new int[]{13546, 13553}, REGULAR_PLANK.item(3), NAILS.item(3), SOFT_CLAY.item(6)),
    WOODEN_SHELVES_3(23, 147, HIGH_BUILD, 8225, new int[]{13547, 13554}, REGULAR_PLANK.item(3), NAILS.item(3), SOFT_CLAY.item(6)),
    OAK_SHELVES_1(34, 240, HIGH_BUILD, 8226, new int[]{13548, 13555}, OAK_PLANK.item(3), SOFT_CLAY.item(6)),
    OAK_SHELVES_2(45, 240, HIGH_BUILD, 8227, new int[]{13549, 13556}, OAK_PLANK.item(3), SOFT_CLAY.item(6)),
    TEAK_SHELVES_1(56, 330, HIGH_BUILD, 8228, new int[]{13550, 13557}, TEAK_PLANK.item(3), SOFT_CLAY.item(6)),
    TEAK_SHELVES_2(67, 930, HIGH_BUILD, 8229, new int[]{13551, 13558}, TEAK_PLANK.item(3), GOLD_LEAF.item(2), SOFT_CLAY.item(6)),

    BEER_BARREL(7, 87, MID_BUILD, 8239, 13568, REGULAR_PLANK.item(3), NAILS.item(3)),
    CIDER_BARREL(12, 91, MID_BUILD, 8240, 13569, REGULAR_PLANK.item(3), NAILS.item(3), new Item(5763, 8)),
    ASGARNIAN_ALE_BARREL(18, 184, MID_BUILD, 8241, 13570, OAK_PLANK.item(3), new Item(1905, 8)),
    GREENMANS_ALE_BARREL(26, 184, MID_BUILD, 8242, 13571, OAK_PLANK.item(3), new Item(1909, 8)),
    DRAGON_BITTER_BARREL(36, 224, MID_BUILD, 8243, 13572, OAK_PLANK.item(3), new Item(1911, 8), STEEL_BAR.item(2)),
    CHEFS_DELIGHT_BARREL(48, 224, MID_BUILD, 8244, 13573, OAK_PLANK.item(3), new Item(5755, 8), STEEL_BAR.item(2)),

    CAT_BLANKET(5, 15, LOW_BUILD, 8236, 13574, BOLT_OF_CLOTH.item(2)),
    CAT_BASKET(19, 58, LOW_BUILD, 8237, 13575, REGULAR_PLANK.item(2), NAILS.item(2)),
    CAT_CUSHIONED_BASKET(33, 58, LOW_BUILD, 8238, 13576, REGULAR_PLANK.item(2), NAILS.item(2), new Item(1737, 2)),

    WOODEN_LARDER(9, 228, MID_BUILD, 8233, 13565, REGULAR_PLANK.item(8), NAILS.item(8)),
    OAK_LARDER(33, 480, MID_BUILD, 8234, 13566, OAK_PLANK.item(8)),
    TEAK_LARDER(43, 750, MID_BUILD, 8235, 13567, TEAK_PLANK.item(8), BOLT_OF_CLOTH.item(2)),

    PUMP_AND_DRAIN(7, 100, MID_BUILD, 8230, 13559, STEEL_BAR.item(5)),
    PUMP_AND_TUB(27, 200, MID_BUILD, 8231, 13561, STEEL_BAR.item(10)),
    SINK(47, 300, MID_BUILD, 8232, 13563, STEEL_BAR.item(15)),

    WOODEN_KITCHEN_TABLE(12, 87, MID_BUILD, 8246, 13577, REGULAR_PLANK.item(3), NAILS.item(3)),
    OAK_KITCHEN_TABLE(32, 180, MID_BUILD, 8247, 13578, OAK_PLANK.item(3)),
    TEAK_KITCHEN_TABLE(52, 270, MID_BUILD, 8248, 13579, TEAK_PLANK.item(3)),

    /*
     * Dining room
     */
    WOOD_DINING_TABLE(10, 115, MID_BUILD, 8115, 13293, REGULAR_PLANK.item(4), NAILS.item(4)),
    OAK_DINING_TABLE(22, 240, MID_BUILD, 8116, 13294, OAK_PLANK.item(4)),
    CARVED_OAK_TABLE(31, 360, MID_BUILD, 8117, 13295, OAK_PLANK.item(6)),
    TEAK_DINING_TABLE(38, 360, MID_BUILD, 8118, 13296, TEAK_PLANK.item(4)),
    CARVED_TEAK_TABLE(45, 600, MID_BUILD, 8119, 13297, TEAK_PLANK.item(6), BOLT_OF_CLOTH.item(4)),
    MAHOGANY_DINING_TABLE(52, 840, MID_BUILD, 8120, 13298, MAHOGANY_PLANK.item(6)),
    OPULENT_DINING_TABLE(72, 3100, MID_BUILD, 8121, 13299, MAHOGANY_PLANK.item(6), BOLT_OF_CLOTH.item(4), GOLD_LEAF.item(4), MARBLE_BLOCK.item(4)),

    WOODEN_BENCH(10, 115, MID_BUILD, 8108, 13300, REGULAR_PLANK.item(4), NAILS.item(4)),
    OAK_BENCH(22, 240, MID_BUILD, 8109, 13301, OAK_PLANK.item(4)),
    CARVED_OAK_BENCH(31, 240, MID_BUILD, 8110, 13302, OAK_PLANK.item(4)),
    TEAK_BENCH(38, 360, MID_BUILD, 8111, 13303, TEAK_PLANK.item(4)),
    CARVED_TEAK_BENCH(44, 360, MID_BUILD, 8112, 13304, TEAK_PLANK.item(4)),
    MAHOGANY_BENCH(52, 560, MID_BUILD, 8113, 13305, MAHOGANY_PLANK.item(4)),
    GILDED_BENCH(61, 1760, MID_BUILD, 8114, 13306, MAHOGANY_PLANK.item(4), GOLD_LEAF.item(4)),

    OAK_DECORATION(16, 120, HIGH_BUILD, 8102, 13798, OAK_PLANK.item(2)),
    TEAK_DECORATION(36, 180, HIGH_BUILD, 8103, 13814, TEAK_PLANK.item(2)),
    GILDED_DECORATION(56, 1020, HIGH_BUILD, 8104, 13782, MAHOGANY_PLANK.item(3), GOLD_LEAF.item(2)),

    ROPE_BELL_PULL(26, 64, HIGH_BUILD, 8099, 13307, OAK_PLANK.item(1), new Item(954, 1)),
    BELL_PULL(37, 120, HIGH_BUILD, 8100, 13308, TEAK_PLANK.item(1), BOLT_OF_CLOTH.item(2)),
    POSH_BELL_PULL(60, 420, HIGH_BUILD, 8101, 13309, TEAK_PLANK.item(1), BOLT_OF_CLOTH.item(2), GOLD_LEAF.item(1)),

    /*
     * Workshop
     */
    WOODEN_WORKBENCH(17, 143, MID_BUILD, 8375, new int[]{6791, 6806}, REGULAR_PLANK.item(5), NAILS.item(5)),
    OAK_WORKBENCH(32, 300, MID_BUILD, 8376, new int[]{6792, 6807}, OAK_PLANK.item(5)),
    STEEL_FRAMED_WORKBENCH(46, 440, MID_BUILD, 8377, new int[]{6793, 6807}, OAK_PLANK.item(6), STEEL_BAR.item(4)),
    BENCH_WITH_VICE(62, 140, MID_BUILD, 8378, new int[]{6794, 6807}, STEEL_FRAMED_WORKBENCH, OAK_PLANK.item(2), STEEL_BAR.item(1)),
    BENCH_WITH_LATHE(77, 140, MID_BUILD, 8379, new int[]{6795, 6807}, BENCH_WITH_VICE, OAK_PLANK.item(2), STEEL_BAR.item(1)),

    CRAFTING_TABLE_1(16, 240, MID_BUILD, 8380, new int[]{6796, 6807}, OAK_PLANK.item(4)),
    CRAFTING_TABLE_2(25, 1, MID_BUILD, 8381, new int[]{6797, 6807}, CRAFTING_TABLE_1, MOLTEN_GLASS.item(1)),
    CRAFTING_TABLE_3(34, 2, MID_BUILD, 8382, new int[]{6798, 6807}, CRAFTING_TABLE_2, MOLTEN_GLASS.item(2)),
    CRAFTING_TABLE_4(42, 120, MID_BUILD, 8383, new int[]{6799, 6807}, CRAFTING_TABLE_3, OAK_PLANK.item(2)),

    TOOL_STORE_1(15, 120, HIGH_BUILD, 8384, new int[]{6786, -1, -1, -1, -1}, OAK_PLANK.item(2)),
    TOOL_STORE_2(25, 120, HIGH_BUILD, 8385, new int[]{6786, 6787, -1, -1, -1}, TOOL_STORE_1, OAK_PLANK.item(2)),
    TOOL_STORE_3(35, 120, HIGH_BUILD, 8386, new int[]{6786, 6787, 6788, -1, -1}, TOOL_STORE_2, OAK_PLANK.item(2)),
    TOOL_STORE_4(44, 120, HIGH_BUILD, 8387, new int[]{6786, 6787, 6788, 6789, -1}, TOOL_STORE_3, OAK_PLANK.item(2)),
    TOOL_STORE_5(55, 120, HIGH_BUILD, 8388, new int[]{6786, 6787, 6788, 6789, 6790}, TOOL_STORE_4, OAK_PLANK.item(2)),

    REPAIR_BENCH(15, 120, MID_BUILD, 8389, 6800, OAK_PLANK.item(2)),
    WHETSTONE(35, 260, MID_BUILD, 8390, 6801, OAK_PLANK.item(4), LIMESTONE_BRICK.item(1)),
    ARMOUR_STAND(55, 500, MID_BUILD, 8391, 6802, OAK_PLANK.item(8), LIMESTONE_BRICK.item(1)),

    PLUMING_STAND(16, 120, MID_BUILD, 8392, 6803, OAK_PLANK.item(2)),
    SHIELD_EASEL(41, 240, MID_BUILD, 8393, 6804, OAK_PLANK.item(4)),
    BANNER_EASEL(66, 510, MID_BUILD, 8394, 6805, OAK_PLANK.item(8), BOLT_OF_CLOTH.item(2)),

    /*
     * Bedroom
     */
    WOODEN_BED(20, 117, MID_BUILD, 8031, 13148, REGULAR_PLANK.item(3), NAILS.item(3), BOLT_OF_CLOTH.item(2)),
    OAK_BED(30, 210, MID_BUILD, 8032, 13149, OAK_PLANK.item(3), BOLT_OF_CLOTH.item(2)),
    LARGE_OAK_BED(34, 330, MID_BUILD, 8033, 13150, OAK_PLANK.item(5), BOLT_OF_CLOTH.item(2)),
    TEAK_BED(40, 300, MID_BUILD, 8034, 13151, TEAK_PLANK.item(3), BOLT_OF_CLOTH.item(2)),
    LARGE_TEAK_BED(45, 480, MID_BUILD, 8035, 13152, TEAK_PLANK.item(5), BOLT_OF_CLOTH.item(2)),
    FOUR_POSTER_BED(53, 450, MID_BUILD, 8036, 13153, MAHOGANY_PLANK.item(3), BOLT_OF_CLOTH.item(2)),
    GILDED_FOUR_POSTER_BED(60, 450, MID_BUILD, 8037, 13154, MAHOGANY_PLANK.item(5), BOLT_OF_CLOTH.item(2), GOLD_LEAF.item(2)),

    SHOE_BOX(20, 58, MID_BUILD, 8038, 13155, REGULAR_PLANK.item(2), NAILS.item(2)),
    OAK_DRAWERS(27, 120, MID_BUILD, 8039, 13156, OAK_PLANK.item(2)),
    OAK_WARDROBE(39, 180, MID_BUILD, 8040, 13157, OAK_PLANK.item(3)),
    TEAK_DRAWERS(51, 180, MID_BUILD, 8041, 13158, TEAK_PLANK.item(2)),
    TEAK_WARDROBE(63, 270, MID_BUILD, 8042, 13159, TEAK_PLANK.item(3)),
    MAHOGANY_WARDROBE(75, 420, MID_BUILD, 8043, 13160, MAHOGANY_PLANK.item(3)),
    GILDED_WARDROBE(87, 720, MID_BUILD, 8044, 13161, MAHOGANY_PLANK.item(3), GOLD_LEAF.item(1)),

    SHAVING_STAND(21, 30, MID_BUILD, 8045, 13162, REGULAR_PLANK.item(1), NAILS.item(1), MOLTEN_GLASS.item(1)),
    OAK_SHAVING_STAND(29, 61, MID_BUILD, 8046, 13163, OAK_PLANK.item(1), MOLTEN_GLASS.item(1)),
    OAK_DRESSER(37, 121, MID_BUILD, 8047, 13164, OAK_PLANK.item(2), MOLTEN_GLASS.item(1)),
    TEAK_DRESSER(46, 181, MID_BUILD, 8048, 13165, TEAK_PLANK.item(2), MOLTEN_GLASS.item(2)),
    FANCY_TEAK_DRESSER(56, 182, MID_BUILD, 8049, 13166, TEAK_PLANK.item(2), MOLTEN_GLASS.item(2)),
    MAHOGANY_DRESSER(64, 281, MID_BUILD, 8050, 13167, MAHOGANY_PLANK.item(2), MOLTEN_GLASS.item(1)),
    GILDED_DRESSER(74, 582, MID_BUILD, 8051, 13168, MAHOGANY_PLANK.item(2), MOLTEN_GLASS.item(2), GOLD_LEAF.item(1)),

    OAK_CLOCK(25, 142, MID_BUILD, 8052, 13169, OAK_PLANK.item(2), CLOCKWORK.item(1)),
    TEAK_CLOCK(55, 202, MID_BUILD, 8053, 13170, TEAK_PLANK.item(2), CLOCKWORK.item(1)),
    GILDED_CLOCK(85, 602, MID_BUILD, 8054, 13171, MAHOGANY_PLANK.item(1), CLOCKWORK.item(1), GOLD_LEAF.item(1)),
    SERVANTS_MONEYBAG(58, 595, MID_BUILD, 21213, 28859, MAHOGANY_PLANK.item(2), BOLT_OF_CLOTH.item(1), GOLD_LEAF.item(1)),

    /*
     * Games room
     */
    JESTER(39, 360, MID_BUILD, 8159, 13390, TEAK_PLANK.item(4)),
    TREASURE_HUNT(49, 800, MID_BUILD, 8160, 13379, TEAK_PLANK.item(8), STEEL_BAR.item(4)),
    HANGMAN(59, 1200, MID_BUILD, 8161, 13404, TEAK_PLANK.item(12), STEEL_BAR.item(6)),

    OAK_PRIZE_CHEST(34, 240, MID_BUILD, 8165, 13385, OAK_PLANK.item(4)),
    TEAK_PRIZE_CHEST(44, 660, MID_BUILD, 8166, 13387, TEAK_PLANK.item(4), GOLD_LEAF.item(1)),
    MAHOGANY_PRIZE_CHEST(54, 860, MID_BUILD, 8167, 13389, MAHOGANY_PLANK.item(4), GOLD_LEAF.item(1)),

    CLAY_ATTACK_STONE(39, 100, LOW_BUILD, 8153, 13392, SOFT_CLAY.item(10)),
    LIMESTONE_ATTACK_STONE(59, 200, LOW_BUILD, 8154, 13393, LIMESTONE_BRICK.item(10)),
    MARBLE_ATTACK_STONE(79, 2000, LOW_BUILD, 8155, 13394, MARBLE_BLOCK.item(4)),

    LESSER_MAGICAL_BALANCE(37, 176, LOW_BUILD, 8156, 13395, Rune.AIR.toItem(500), Rune.EARTH.toItem(500), Rune.FIRE.toItem(500), Rune.WATER.toItem(500)),
    MEDIUM_MAGICAL_BALANCE(57, 252, LOW_BUILD, 8157, 13396, Rune.AIR.toItem(1000), Rune.EARTH.toItem(1000), Rune.FIRE.toItem(1000), Rune.WATER.toItem(1000)),
    GREATER_MAGICAL_BALANCE(77, 356, LOW_BUILD, 8158, 13397, Rune.AIR.toItem(2000), Rune.EARTH.toItem(2000), Rune.FIRE.toItem(2000), Rune.WATER.toItem(2000)),

    HOOP_AND_STICK(30, 120, MID_BUILD, 8162, 13398, OAK_PLANK.item(2)),
    DARTBOARD(54, 290, MID_BUILD, 8163, 13400, TEAK_PLANK.item(3), STEEL_BAR.item(1)),
    ARCHERY_TARGET(81, 600, MID_BUILD, 8164, 13402, TEAK_PLANK.item(6), STEEL_BAR.item(3)),

    /*
     * Combat room
     */
    BOXING_RING(32, 420, MID_BUILD, 8023, new int[]{13129, 13132, 13130, 13130, 13131, 13129, -1, -1, -1, 13129, 13129, 13128, 13126, 13126, 13128, 13127, 13128, 13126, 13126}, OAK_PLANK.item(6), BOLT_OF_CLOTH.item(4)),
    FENCING_RING(41, 570, MID_BUILD, 8024, new int []{13133, 13133, 13133, 13133, 13133, 13133, -1, -1, -1, 13133, 13133, 13134, 13135, 13135, 13134, 13136, 13134, 13135, 13135}, OAK_PLANK.item(8), BOLT_OF_CLOTH.item(6)),
    COMBAT_RING(51, 630, MID_BUILD, 8025, new int []{13137, 13137, 13137, 13137, 13137, 13137, -1, -1, -1, 13137, 13137, 13139, 13138, 13138, 13139, 13140, 13139, 13138, 13138}, TEAK_PLANK.item(8), BOLT_OF_CLOTH.item(6)),
    RANGING_PEDESTALS(71, 720, MID_BUILD, 8026, new int[] {13725, -1, -1, 13145, -1, -1, 13145, 13145, 13273, 13273, 13145, 13273, 13273, 13147, 13723, 13723, 13723, 13723, 13147}, TEAK_PLANK.item(8)),
    BALANCE_BEAM(81, 1000, MID_BUILD, 8027, new int[] {13725, -1, -1, 13141, -1, -1, 13725, 13141, 13141, 13141, 13725, 13142, 13144, 13143, 13723, 13723, 13723, 13723, 13723}, TEAK_PLANK.item(10), STEEL_BAR.item(5)),

    GLOVE_RACK(34, 120, MID_BUILD, 8028, 13381, OAK_PLANK.item(2)),
    WEAPONS_RACK(44, 180, MID_BUILD, 8029, 13382, TEAK_PLANK.item(2)),
    EXTRA_WEAPONS_RACK(54, 440, MID_BUILD, 8030, 13383, TEAK_PLANK.item(4), STEEL_BAR.item(4)),

    COMBAT_DUMMY(48, 660, MID_BUILD, 20745, 29336, TEAK_PLANK.item(5), BOLT_OF_CLOTH.item(4), new Item(1783, 5)),
    UNDEAD_COMBAT_DUMMY(53, 220, MID_BUILD, 20746, 29337, COMBAT_DUMMY, new Item(8921), new Item(4286, 4)),

    /*
     * Quest hall
     */
    KING_ARTHUR_PORTRAIT(35, 211, HIGH_BUILD, 8285, 13510, TEAK_PLANK.item(2), new Item(7995)),
    ELENA_PORTRAIT(35, 211, HIGH_BUILD, 8286, 13511, TEAK_PLANK.item(2), new Item(7996)),
    GIANT_DWARF_PORTRAIT(35, 211, HIGH_BUILD, 8287, 13512, TEAK_PLANK.item(2), new Item(7997)),
    MISCELLANIANS_PORTRAIT(55, 311, HIGH_BUILD, 8288, 13513, MAHOGANY_PLANK.item(2), new Item(7998)),

    LUMBRIDGE_LANDSCAPE(44, 314, HIGH_BUILD, 8289, 13517, TEAK_PLANK.item(3), new Item(8002)),
    DESERT_LANDSCAPE(44, 314, HIGH_BUILD, 8290, 13514, TEAK_PLANK.item(3), new Item(7999)),
    MORYTANIA_LANDSCAPE(44, 314, HIGH_BUILD, 8291, 13518, TEAK_PLANK.item(3), new Item(8003)),
    KARAMJA_LANDSCAPE(65, 464, HIGH_BUILD, 8292, 13516, MAHOGANY_PLANK.item(3), new Item(8001)),
    ISAFDAR_LANDSCAPE(65, 464, HIGH_BUILD, 8293, 13515, MAHOGANY_PLANK.item(3), new Item(8000)),

    MOUNTED_ANTI_DRAGON_SHIELD(47, 280, HIGH_BUILD, 8282, 13522, TEAK_PLANK.item(3), new Item(1540)),
    MOUNTED_AMULET_OF_GLORY(47, 290, HIGH_BUILD, 8283, 13523, TEAK_PLANK.item(3), new Item(1704)),
    MOUNTED_LEGENDS_CAPE(47, 300, HIGH_BUILD, 8284, 13524, TEAK_PLANK.item(3), new Item(1052)),
    MOUNTED_MYTHICAL_CAPE(47, 370, HIGH_BUILD, 21913, 31986, TEAK_PLANK.item(3), new Item(22114)),

    MOUNTED_SILVERLIGHT(42, 187, HIGH_BUILD, 8279, 13519, TEAK_PLANK.item(2), new Item(2402)),
    MOUNTED_EXCALIBUR(42, 194, HIGH_BUILD, 8280, 13521, TEAK_PLANK.item(2), new Item(35)),
    MOUNTED_DARKLIGHT(42, 202, HIGH_BUILD, 8281, 13520, TEAK_PLANK.item(2), new Item(6746)),

    SMALL_MAP(38, 211, HIGH_BUILD, 8294, 13525, TEAK_PLANK.item(2), new Item(8004)),
    MEDIUM_MAP(58, 451, HIGH_BUILD, 8295, 13526, MAHOGANY_PLANK.item(3), new Item(8005)),
    LARGE_MAP(78, 591, HIGH_BUILD, 8296, 13527, MAHOGANY_PLANK.item(4), new Item(8006)),

    /*
     * Menagerie
     */
    OAK_HOUSE(37, 240, MID_BUILD, 12704, 26297, OAK_PLANK.item(4)),
    TEAK_HOUSE(48, 360, MID_BUILD, 12705, 26298, OAK_HOUSE, TEAK_PLANK.item(4)),
    MAHOGANY_HOUSE(59, 560, MID_BUILD, 12706, 26299, TEAK_HOUSE, MAHOGANY_PLANK.item(4)),
    CONSECRATED_HOUSE(70, 1560, MID_BUILD, 12707, 26830, MAHOGANY_HOUSE, MAHOGANY_PLANK.item(4), MAGIC_STONE.item(1)),
    DESECRATED_HOUSE(81, 160, MID_BUILD, 12708, 26831, CONSECRATED_HOUSE, MAHOGANY_PLANK.item(4), LIMESTONE_BRICK.item(1)),
    NATURE_HOUSE(92, 158, MID_BUILD, 12709, 26832, DESECRATED_HOUSE, MAHOGANY_PLANK.item(1), new Item(1929, 2), new Item(6034, 3)),

    GRASSLAND_HABITAT(37, 37, GROUND_PLANT, 12710, new int[]{26834, 26840, 26846, 26852}, new Item(8417), new Item(6032, 2)),
    FOREST_HABITAT(47, 51, GROUND_PLANT, 12711, new int[]{26835, 26841, 26847, 26853}, new Item(8419), new Item(6032, 3)),
    DESERT_HABITAT(57, 34, GROUND_PLANT, 12712, new int[]{26836, 26842, 26848, 26854}, new Item(8431), new Item(1783, 5)),
    POLAR_HABITAT(67, 271, GROUND_PLANT, 12713, new int[]{26837, 26843, 26849, 26855}, OAK_PLANK.item(3), Rune.WATER.toItem(2000), new Item(6696, 5)),
    VOLCANIC_HABITAT(77, 46, GROUND_PLANT, 12714, new int[]{26838, 26844, 26850, 26856}, new Item(6983, 5), Rune.LAVA.toItem(2000)),

    OAK_SCRATCHING_POST(39, 124, MID_BUILD, 12715, 26858, OAK_PLANK.item(2), new Item(954)),
    TEAK_SCRATCHING_POST(49, 204, MID_BUILD, 12716, 26859, TEAK_PLANK.item(2), new Item(954), LIMESTONE_BRICK.item(1)),
    MAHOGANY_SCRATCHING_POST(59, 304, MID_BUILD, 12717, 26860, MAHOGANY_PLANK.item(2), new Item(954), LIMESTONE_BRICK.item(1)),

    SIMPLE_ARENA(63, 139, MID_BUILD, 12718, new int[]{26862, 26866}, OAK_PLANK.item(2), BOLT_OF_CLOTH.item(1), new Item(954)),
    ADVANCED_ARENA(73, 199, MID_BUILD, 12719, new int[]{26863, 26866}, TEAK_PLANK.item(2), BOLT_OF_CLOTH.item(1), new Item(954)),
    GLORIOUS_ARENA(83, 299, MID_BUILD, 12720, new int[]{26864, 26866}, MAHOGANY_PLANK.item(2), BOLT_OF_CLOTH.item(1), new Item(954)),

    PET_LIST(38, 198, MID_BUILD, 12721, 26868, OAK_PLANK.item(3), BOLT_OF_CLOTH.item(1), new Item(970)),

    OAK_FEEDER(37, 182, MID_BUILD, 12722, 26870, OAK_PLANK.item(3), new Item(1927)),
    TEAK_FEEDER(48, 272, MID_BUILD, 12723, 26871, OAK_PLANK.item(3), new Item(1927)),
    MAHOGANY_FEEDER(59, 862, MID_BUILD, 12724, 26872, OAK_PLANK.item(3), new Item(1927), GOLD_LEAF.item(1)),

    /*
     * Study
     */
    OAK_LECTERN(40, 60, MID_BUILD, 8334, 13642, OAK_PLANK.item(1)),
    EAGLE_LECTERN(47, 120, MID_BUILD, 8335, 13643, OAK_PLANK.item(2)),
    DEMON_LECTERN(47, 120, MID_BUILD, 8336, 13644, OAK_PLANK.item(2)),
    TEAK_EAGLE_LECTERN(57, 180, MID_BUILD, 8337, 13645, TEAK_PLANK.item(2)),
    TEAK_DEMON_LECTERN(57, 180, MID_BUILD, 8338, 13646, TEAK_PLANK.item(2)),
    MAHOGANY_EAGLE_LECTERN(67, 580, MID_BUILD, 8339, 13647, MAHOGANY_PLANK.item(2), GOLD_LEAF.item(2)),
    MAHOGANY_DEMON_LECTERN(67, 580, MID_BUILD, 8340, 13648, MAHOGANY_PLANK.item(2), GOLD_LEAF.item(2)),

    GLOBE(41, 180, MID_BUILD, 8341, 13649, OAK_PLANK.item(3)),
    ORNAMENTAL_GLOBE(50, 270, MID_BUILD, 8342, 13650, TEAK_PLANK.item(3)),
    LUNAR_GLOBE(59, 570, MID_BUILD, 8343, 13651, TEAK_PLANK.item(3), GOLD_LEAF.item(1)),
    CELESTIAL_GLOBE(68, 570, MID_BUILD, 8344, 13652, TEAK_PLANK.item(3), GOLD_LEAF.item(1)),
    ARMILLIARY_SPHERE(77, 960, MID_BUILD, 8345, 13653, MAHOGANY_PLANK.item(2), GOLD_LEAF.item(2), STEEL_BAR.item(4)),
    SMALL_ORRERY(86, 1320, MID_BUILD, 8346, 13654, MAHOGANY_PLANK.item(3), GOLD_LEAF.item(3)),
    LARGE_ORRERY(95, 1420, MID_BUILD, 8347, 13655, MAHOGANY_PLANK.item(3), GOLD_LEAF.item(5)),

    CRYSTAL_BALL(42, 280, MID_BUILD, 8351, 13659, TEAK_PLANK.item(3), new Item(567)),
    ELEMENTAL_SPHERE(54, 580, MID_BUILD, 8352, 13660, TEAK_PLANK.item(3), new Item(567), GOLD_LEAF.item(1)),
    CRYSTAL_OF_POWER(66, 890, MID_BUILD, 8353, 13661, MAHOGANY_PLANK.item(2), new Item(567), GOLD_LEAF.item(2)),

    ALCHEMICAL_CHART(43, 30, HIGH_BUILD, 8354, 13662, BOLT_OF_CLOTH.item(2)),
    ASTRONOMICAL_CHART(63, 45, HIGH_BUILD, 8355, 13663, BOLT_OF_CLOTH.item(3)),
    INFERNAL_CHART(83, 60, HIGH_BUILD, 8356, 13664, BOLT_OF_CLOTH.item(4)),

    WOODEN_TELESCOPE(44, 121, MID_BUILD, 8348, 13656, OAK_PLANK.item(2), MOLTEN_GLASS.item(1)),
    TEAK_TELESCOPE(64, 181, MID_BUILD, 8349, 13657, TEAK_PLANK.item(2), MOLTEN_GLASS.item(1)),
    MAHOGANY_TELESCOPE(84, 580, MID_BUILD, 8350, 13658, MAHOGANY_PLANK.item(2), MOLTEN_GLASS.item(1)),

    /*
     * Costume room
     */
    OAK_CAPE_RACK(54, 240, MID_BUILD, 9817, 18766, OAK_PLANK.item(4)),
    TEAK_CAPE_RACK(63, 360, MID_BUILD, 9818, 18767, TEAK_PLANK.item(4)),
    MAHOGANY_CAPE_RACK(72, 720, MID_BUILD, 9819, 18768, MAHOGANY_PLANK.item(4)),
    GILDED_CAPE_RACK(81, 900, MID_BUILD, 9820, 18769, MAHOGANY_PLANK.item(4), GOLD_LEAF.item(1)),
    MARBLE_CAPE_RACK(91, 2000, MID_BUILD, 9821, 18770, MARBLE_BLOCK.item(1)),
    MAGICAL_CAPE_RACK(91, 2000, MID_BUILD, 9822, 18771, MAGIC_STONE.item(1)),

    OAK_MAGIC_WARDROBE(42, 240, MID_BUILD, 9829, 18784, OAK_PLANK.item(4)),
    CARVED_OAK_MAGIC_WARDROBE(51, 360, MID_BUILD, 9830, 18786, OAK_PLANK.item(6)),
    TEAK_MAGIC_WARDROBE(60, 360, MID_BUILD, 9831, 18788, TEAK_PLANK.item(4)),
    CARVED_TEAK_MAGIC_WARDROBE(69, 450, MID_BUILD, 9832, 18790, TEAK_PLANK.item(6)),
    MAHOGANY_MAGIC_WARDROBE(78, 560, MID_BUILD, 9833, 18792, MAHOGANY_PLANK.item(4)),
    GILDED_MAGIC_WARDROBE(87, 700, MID_BUILD, 9834, 18794, MAHOGANY_PLANK.item(4), GOLD_LEAF.item(1)),
    MARBLE_MAGIC_WARDROBE(96, 1000, MID_BUILD, 9835, 18796,MARBLE_BLOCK.item(1)),

    OAK_TOY_BOX(50, 120, MID_BUILD, 9836, 18798, OAK_PLANK.item(2)),
    TEAK_TOY_BOX(68, 180, MID_BUILD, 9837, 18800, TEAK_PLANK.item(2)),
    MAHOGANY_TOY_BOX(86, 280, MID_BUILD, 9838, 18802, MAHOGANY_PLANK.item(2)),

    OAK_TREASURE_CHEST(48, 120, MID_BUILD, 9839, 18804, OAK_PLANK.item(2)),
    TEAK_TREASURE_CHEST(66, 180, MID_BUILD, 9840, 18806, TEAK_PLANK.item(2)),
    MAHOGANY_TREASURE_CHEST(84, 280, MID_BUILD, 9841, 18808, MAHOGANY_PLANK.item(2)),

    OAK_FANCY_DRESS_BOX(44, 120, MID_BUILD, 9823, 18772, OAK_PLANK.item(2)),
    TEAK_FANCY_DRESS_BOX(62, 180, MID_BUILD, 9824, 18774, TEAK_PLANK.item(2)),
    MAHOGANY_FANCY_DRESS_BOX(80, 280, MID_BUILD, 9825, 18776, MAHOGANY_PLANK.item(2)),

    OAK_ARMOUR_CASE(46, 180, MID_BUILD, 9826, 18778, OAK_PLANK.item(3)),
    TEAK_ARMOUR_CASE(64, 240, MID_BUILD, 9827, 18780, TEAK_PLANK.item(3)),
    MAHOGANY_ARMOUR_CASE(82, 420, MID_BUILD, 9828, 18782, MAHOGANY_PLANK.item(3)),

    /*
     * Chapel
     */
    SARADOMIN_SYMBOL(48, 120, MID_BUILD, 8055, 13172, OAK_PLANK.item(2)),
    ZAMORAK_SYMBOL(48, 120, MID_BUILD, 8056, 13173, OAK_PLANK.item(2)),
    GUTHIX_SYMBOL(48, 120, MID_BUILD, 8057, 13174, OAK_PLANK.item(2)),
    SARADOMIN_ICON(59, 960, MID_BUILD, 8058, 13175, TEAK_PLANK.item(4), GOLD_LEAF.item(2)),
    ZAMORAK_ICON(59, 960, MID_BUILD, 8059, 13176, TEAK_PLANK.item(4), GOLD_LEAF.item(2)),
    GUTHIX_ICON(59, 960, MID_BUILD, 8060, 13177, TEAK_PLANK.item(4), GOLD_LEAF.item(2)),
    BOB_ICON(71, 1160, MID_BUILD, 8061, 13178, MAHOGANY_PLANK.item(4), GOLD_LEAF.item(2)),

    OAK_ALTAR(45, 240, MID_BUILD, 8062, 13179, OAK_PLANK.item(4)),
    TEAK_ALTAR(50, 360, MID_BUILD, 8063, 13182, TEAK_PLANK.item(4)),
    CLOTH_ALTAR(56, 390, MID_BUILD, 8064, 13185, TEAK_PLANK.item(4), BOLT_OF_CLOTH.item(2)),
    MAHOGANY_ALTAR(60, 590, MID_BUILD, 8065, 13188, MAHOGANY_PLANK.item(4), BOLT_OF_CLOTH.item(2)),
    LIMESTONE_ALTAR(64, 910, MID_BUILD, 8066, 13191, MAHOGANY_PLANK.item(6), BOLT_OF_CLOTH.item(2), LIMESTONE_BRICK.item(2)),
    MARBLE_ALTAR(70, 1030, MID_BUILD, 8067, 13194, MARBLE_BLOCK.item(2), BOLT_OF_CLOTH.item(2)),
    GILDED_ALTAR(75, 2230, MID_BUILD, 8068, 13197, MARBLE_BLOCK.item(2), BOLT_OF_CLOTH.item(2), GOLD_LEAF.item(2)),

    STEEL_TORCHES(45, 80, MID_BUILD, 8070, 13202, STEEL_BAR.item(2)),
    WOODEN_TORCHES(49, 58, MID_BUILD, 8069, 13200, REGULAR_PLANK.item(2), NAILS.item(2)),
    STEEL_CANDLESTICKS(53, 124, MID_BUILD, 8071, 13204, STEEL_BAR.item(6), new Item(36, 6)),
    GOLD_CANDLESTICKS(57, 46, MID_BUILD, 8072, 13206, new Item(2357, 6), new Item(36, 6)),
    INCENSE_BURNER(61, 280, MID_BUILD, 8073, 13208, OAK_PLANK.item(4), STEEL_BAR.item(2)),
    MAHOGANY_BURNER(65, 600, MID_BUILD, 8074, 13210, MAHOGANY_PLANK.item(4), STEEL_BAR.item(2)),
    MARBLE_BURNER(69, 1600, MID_BUILD, 8075, 13212, MARBLE_BLOCK.item(2), STEEL_BAR.item(2)),

    SHUTTERED_WINDOWS(49, 228, HIGH_BUILD, 8076, new int[]{13217, 13226, 13235, 13244, 13253, 13262, 27073}, REGULAR_PLANK.item(8), NAILS.item(8)),
    DECORATIVE_WINDOWS(69, 4, HIGH_BUILD, 8077, new int[]{13218, 13227, 13236, 13245, 13254, 13263, 27074}, MOLTEN_GLASS.item(8)),
    STAINED_GLASS(89, 5, HIGH_BUILD, 8078, new int[]{13219, 13228, 13237, 13246, 13255, 13264, 27075}, MOLTEN_GLASS.item(16)),

    SMALL_STATUE(49, 40, MID_BUILD, 8082, 13271, LIMESTONE_BRICK.item(2)),
    MEDIUM_STATUE(69, 500, MID_BUILD, 8083, 13272, MARBLE_BLOCK.item(1)),
    LARGE_STATUE(89, 1500, MID_BUILD, 8084, 13273, MARBLE_BLOCK.item(3)),

    WINDCHIMES(49, 323, MID_BUILD, 8079, 13214, OAK_PLANK.item(4), NAILS.item(4), STEEL_BAR.item(4)),
    BELLS(58, 480, MID_BUILD, 8080, 13215, TEAK_PLANK.item(4), STEEL_BAR.item(6)),
    ORGAN(69, 680, MID_BUILD, 8081, 13216, MAHOGANY_PLANK.item(4), STEEL_BAR.item(6)),

    /*
     * Teleport chamber
     */
    TEAK_PORTAL_FRAME(50, 270, MID_BUILD, 8328, 13636, TEAK_PLANK.item(3)),
    MAHOGANY_PORTAL_FRAME(65, 420, MID_BUILD, 8329, 13637, MAHOGANY_PLANK.item(3)),
    MARBLE_PORTAL_FRAME(80, 1500, MID_BUILD, 8330, 13638, MARBLE_BLOCK.item(3)),

    TELEPORT_FOCUS(50, 40, MID_BUILD, 8331, 13640, LIMESTONE_BRICK.item(2)),
    GREATER_TELEPORT_FOCUS(65, 500, MID_BUILD, 8332, 13641, MARBLE_BLOCK.item(1)),
    SCRYING_POOL(80, 2000, MID_BUILD, 8333, 13639, MARBLE_BLOCK.item(1)),

    /*
     * Formal garden
     */
    GAZEBO(65, 1200, MID_BUILD, 8192, 6748, MAHOGANY_PLANK.item(8), STEEL_BAR.item(4)),
    SMALL_FOUNTAIN(71, 500, MID_BUILD, 8193, 6749, MARBLE_BLOCK.item(1)),
    LARGE_FOUNTAIN(75, 1000, MID_BUILD, 8194, 6750, MARBLE_BLOCK.item(2)),
    POSH_FOUNTAIN(81, 1500, MID_BUILD, 8195, 6751, MARBLE_BLOCK.item(3)),

    BOUNDARY_STONES(55, 100, MID_BUILD, 8196, 5152, SOFT_CLAY.item(10)),
    WOODEN_FENCE(59, 280, MID_BUILD, 8197, 5153, REGULAR_PLANK.item(10)),
    STONE_WALL(63, 200, MID_BUILD, 8198, 5154, LIMESTONE_BRICK.item(10)),
    IRON_RAILINGS(67, 220, MID_BUILD, 8199, 5155, IRON_BAR.item(10), LIMESTONE_BRICK.item(6)),
    PICKET_FENCE(71, 640, MID_BUILD, 8200, 5631, OAK_PLANK.item(10), STEEL_BAR.item(2)),
    GARDEN_FENCE(75, 940, MID_BUILD, 8201, 5632, TEAK_PLANK.item(10), STEEL_BAR.item(2)),
    MARBLE_WALL(79, 4000, MID_BUILD, 8202, new int[]{5907, 5907, 5907}, MARBLE_BLOCK.item(8)),

    THORNY_HEDGE(56, 70, GROUND_PLANT, 8203, new int[]{6727, 6728, 6729}, new Item(8437)),
    NICE_HEDGE(60, 100, GROUND_PLANT, 8204, new int[]{6730, 6731, 6732}, new Item(8439)),
    SMALL_BOX_HEDGE(64, 122, GROUND_PLANT, 8205, new int[]{6733, 6734, 6735}, new Item(8441)),
    TOPIARY_HEDGE(68, 141, GROUND_PLANT, 8206, new int[]{6736, 6737, 6738}, new Item(8443)),
    FANCY_HEDGE(72, 158, GROUND_PLANT, 8207, new int[]{6739, 6740, 6741}, new Item(8445)),
    TALL_FANCY_HEDGE(76, 223, GROUND_PLANT, 8208, new int[]{6742, 6743, 6744}, new Item(8447)),
    TALL_BOX_HEDGE(80, 316, GROUND_PLANT, 8209, new int[]{6745, 6746, 6747}, new Item(8449)),

    SUNFLOWER(66, 70, GROUND_PLANT, 8213, 5146, new Item(8457)),
    MARIGOLDS(71, 100, GROUND_PLANT, 8214, 5147, new Item(8459)),
    ROSES(76, 122, GROUND_PLANT, 8215, 5148, new Item(8461)),

    ROSEMARY(66, 70, GROUND_PLANT, 8210, 5140, new Item(8451)),
    DAFFODILS(71, 100, GROUND_PLANT, 8211, 5141, new Item(8453)),
    BLUEBELLS(76, 122, GROUND_PLANT, 8212, 5142, new Item(8455)),

    SMALL_SUNFLOWER(66, 70, GROUND_PLANT, 8213, 5149, new Item(8457)),
    SMALL_MARIGOLDS(71, 100, GROUND_PLANT, 8214, 5150, new Item(8459)),
    SMALL_ROSES(76, 122, GROUND_PLANT, 8215, 5151, new Item(8461)),

    SMALL_ROSEMARY(66, 70, GROUND_PLANT, 8210, 5143, new Item(8451)),
    SMALL_DAFFODILS(71, 100, GROUND_PLANT, 8211, 5144, new Item(8453)),
    SMALL_BLUEBELLS(76, 122, GROUND_PLANT, 8212, 5145, new Item(8455)),

    /*
     * Throne room
     */
    OAK_THRONE(60, 800, MID_BUILD, 8357, 13665, OAK_PLANK.item(5), MARBLE_BLOCK.item(1)),
    TEAK_THRONE(67, 1450, MID_BUILD, 8358, 13666, TEAK_PLANK.item(5), MARBLE_BLOCK.item(2)),
    MAHOGANY_THRONE(74, 2200, MID_BUILD, 8359, 13667, MAHOGANY_PLANK.item(5), MARBLE_BLOCK.item(3)),
    GILDED_THRONE(81, 1700, MID_BUILD, 8360, 13668, MAHOGANY_PLANK.item(5), MARBLE_BLOCK.item(2), GOLD_LEAF.item(3)),
    SKELETON_THRONE(88, 7003, MID_BUILD, 8361, 13669, MAGIC_STONE.item(5), MARBLE_BLOCK.item(4), new Item(526, 5), new Item(964, 2)),
    CRYSTAL_THRONE(95, 15000, MID_BUILD, 8362, 13670, MAGIC_STONE.item(15)),
    DEMONIC_THRONE(99, 25000, MID_BUILD, 8363, 13671, MAGIC_STONE.item(25)),

    FLOOR_DECORATION(61, 700, MID_BUILD, 8370, new int[]{13689, 13687, 13688, 13686, 13684, 13685, 27072}, MAHOGANY_PLANK.item(5)),
    STEEL_CAGE_TRAP(68, 1100, MID_BUILD, 8371, new int[]{13689, 13687, 13688, 13686, 13684, 13685, 27072}, MAHOGANY_PLANK.item(5), STEEL_BAR.item(20)),
    TRAP_TRAPDOOR(74, 770, MID_BUILD, 8372, new int[]{13689, 13687, 13688, 13686, 13684, 13685, 27072}, MAHOGANY_PLANK.item(5), CLOCKWORK.item(10)),
    LESSER_MAGIC_CAGE(82, 2700, MID_BUILD, 8373, new int[]{13689, 13687, 13688, 13686, 13684, 13685, 27072}, MAHOGANY_PLANK.item(5), MAGIC_STONE.item(2)),
    GREATER_MAGIC_CAGE(89, 4700, MID_BUILD, 8374, new int[]{13689, 13687, 13688, 13686, 13684, 13685, 27072}, MAHOGANY_PLANK.item(5), MAGIC_STONE.item(4)),

    ROUND_SHIELD(66, 120, MID_BUILD, 8105, 13737, OAK_PLANK.item(2)),
    SQUARE_SHIELD(76, 360, MID_BUILD, 8106, 13769, TEAK_PLANK.item(4)),
    KITE_SHIELD(86, 420, MID_BUILD, 8107, 13753, MAHOGANY_PLANK.item(3)),

    OAK_LEVER(68, 300, MID_BUILD, 8364, 13674, OAK_PLANK.item(5)),
    TEAK_LEVER(78, 450, MID_BUILD, 8365, 13672, TEAK_PLANK.item(5)),
    MAHOGANY_LEVER(88, 700, MID_BUILD, 8366, 13673, MAHOGANY_PLANK.item(5)),

    OAK_TRAPDOOR(68, 300, MID_BUILD, 8367, 13675, OAK_PLANK.item(5)),
    TEAK_TRAPDOOR(78, 450, MID_BUILD, 8368, 13676, TEAK_PLANK.item(5)),
    MAHOGANY_TRAPDOOR(88, 700, MID_BUILD, 8369, 13677, MAHOGANY_PLANK.item(5)),

    CARVED_TEAK_BENCH_2(44, 360, MID_BUILD, 8112, 13694, TEAK_PLANK.item(4)), // these
    MAHOGANY_BENCH_2(52, 560, MID_BUILD, 8113, 13695, MAHOGANY_PLANK.item(4)),
    GILDED_BENCH_2(61, 1760, MID_BUILD, 8114, 13696, MAHOGANY_PLANK.item(4), GOLD_LEAF.item(4)),

    /*
     * Oubliette
     */
    SPIKES(65, 623, MID_BUILD, 8302, new int[]{13334, 13335, 13336, -1, -1}, STEEL_BAR.item(20), COINS.item(50000)),
    TENTACLE_POOL(71, 326, MID_BUILD, 8303, new int[]{13331, 13332, 13333, -1, -1}, new Item(1929, 20), COINS.item(100000)),
    FLAME_PIT(77, 357, MID_BUILD, 8304, new int[]{-1, -1, -1, 13337, 13337}, new Item(Tool.TINDER_BOX, 20), COINS.item(125000)),
    ROCNAR(83, 387, MID_BUILD, 8305, new int[]{-1, -1, -1, -1, 13373}, COINS.item(150000)),

    OAK_CAGE(65, 640, MID_BUILD, 8297, new int[]{13313, 13314}, OAK_PLANK.item(10), STEEL_BAR.item(2)),
    OAK_AND_STEEL_CAGE(70, 800, MID_BUILD, 8298, new int[]{13316, 13317}, OAK_PLANK.item(10), STEEL_BAR.item(10)),
    STEEL_CAGE(75, 400, MID_BUILD, 8299, new int[]{13319, 13320}, STEEL_BAR.item(20)),
    SPIKED_CAGE(80, 500, MID_BUILD, 8300, new int[]{13322, 13323}, STEEL_BAR.item(25)),
    BONE_CAGE(85, 603, MID_BUILD, 8301, new int[]{13325, 13326}, OAK_PLANK.item(10), new Item(526, 10)),

    SKELETON_GUARD(70, 223, -1, 8131, 13366, COINS.item(50000)),
    GUARD_DOG(74, 273, -1, 8132, 13367, COINS.item(75000)),
    HOBGOBLIN(78, 316, -1, 8133, 13368, COINS.item(100000)),
    BABY_RED_DRAGON(82, 387, -1, 8134, 13372, COINS.item(150000)),
    HUGE_SPIDER(86, 447, -1, 8135, 13370, COINS.item(200000)),
    TROLL_GUARD(90, 1000, -1, 8136, 13369, COINS.item(1000000)),
    HELLHOUND(94, 2236, -1, 8137, 2715, COINS.item(5000000)),

    CANDLES(72, 243, MID_BUILD, 8128, 13342, OAK_PLANK.item(4), new Item(33, 4)),
    TORCH(84, 244, MID_BUILD, 8129, 13341, OAK_PLANK.item(4), new Item(594, 4)),
    SKULL_TORCH(94, 246, MID_BUILD, 8130, 13343, OAK_PLANK.item(4), new Item(594, 4), new Item(964, 4)),

    OAK_LADDER(68, 300, MID_BUILD, 8306, 13328, OAK_PLANK.item(5)),
    TEAK_LADDER(78, 450, MID_BUILD, 8307, 13329, TEAK_PLANK.item(5)),
    MAHOGANY_LADDER(88, 700, MID_BUILD, 8308, 13330, MAHOGANY_PLANK.item(5)),

    DECORATIVE_BLOOD(72, 4, MID_BUILD, 8125, 13312, new Item(1763, 4)),
    DECORATIVE_PIPE(83, 120, MID_BUILD, 8126, 13311, STEEL_BAR.item(6)),
    HANGING_SKELETON(94, 3, MID_BUILD, 8127, 13310, new Item(964, 2), new Item(526, 6)),

    /*
     * Superior garden
     */
    SPIRIT_TREE(75, 700, GROUND_PLANT, 20635, 29227, new Item(5375)),
    OBELISK(80, 3000, MID_BUILD, 21788, 31554, new Item(21804, 4), MARBLE_BLOCK.item(4)),
    FAIRY_RING(85, 535, GROUND_PLANT, 20636, 29228, new Item(6004, 10), new Item(20609)),
    SPIRIT_TREE_AND_FAIRY_RING(95, 1170, GROUND_PLANT, 20637, 29229, new Item(5375), new Item(6004, 10), new Item(20609)),

    TOPIARY_BUSH(65, 141, GROUND_PLANT, 20638, 29230, new Item(8443, 1)),

    RESTORATION_POOL(65, 706, MID_BUILD, 20639, 29237, LIMESTONE_BRICK.item(5), new Item(1929, 10), Rune.SOUL.toItem(1000), Rune.BODY.toItem(1000)),
    REVITALISATION_POOL(70, 850, MID_BUILD, 20640, 29238, RESTORATION_POOL, new Item(Potion.STAMINA.vialIds[3], 10)),
    REJUVENATION_POOL(80, 900, MID_BUILD, 20641, 29239, REVITALISATION_POOL, new Item(Potion.PRAYER.vialIds[3], 10)),
    FANCY_REJUVENATION_POOL(85, 1950, MID_BUILD, 20642, 29240, REJUVENATION_POOL, new Item(Potion.SUPER_RESTORE.vialIds[3], 10), MARBLE_BLOCK.item(2)),
    ORNATE_REJUVENATION_POOL(90, 3107, MID_BUILD, 20643, 29241, FANCY_REJUVENATION_POOL, new Item(Potion.ANTI_VENOM.vialIds[3], 10), GOLD_LEAF.item(5), Rune.BLOOD.toItem(1000)),

    ZEN_THEME(65, 297, GROUND_PLANT, 20644, new int[]{29242, 29242, 29242, 29243, 29244, 29245, 29246, 29247}, new Item(1783, 6), new Item(6955, 1), new Item(8419, 1)),
    OTHERWORLDLY_THEME(75, 316, GROUND_PLANT, 20645, new int[]{29248, 29248, 29248, 29249, 29250, 29251, 29252, 29253}, new Item(6034, 8), new Item(1767,1), new Item(6004, 4), new Item(7409, 1)),
    VOLCANIC_THEME(85, 4464, GROUND_PLANT, 20646, new int[]{29254, 29255, 29256, 29257, 29258, 29259, 29260, 29261}, new Item(6983, 2), new Item(6573, 6), Rune.FIRE.toItem(1000), Rune.LAVA.toItem(2000)),

    REDWOOD_FENCE(24, 240, MID_BUILD, 20647, new int[]{29262, 29263, 29264}, new Item(19669, 10), STEEL_BAR.item(2)),
    OBSIDIAN_FENCE(83, 2741, MID_BUILD, 20648, new int[]{29267, 29268, 29269}, new Item(6526, 10), new Item(6528, 2), new Item(6522, 25)),

    TEAK_GARDEN_BENCH(66, 540, MID_BUILD, 20649, new int[]{29270, 29271}, TEAK_PLANK.item(6)),
    GNOME_BENCH(77, 840, MID_BUILD, 20650, new int[]{29272, 29273}, MAHOGANY_PLANK.item(6)),
    MARBLE_BENCH(88, 3000, MID_BUILD, 20651, new int[]{29274, 29275}, MARBLE_BLOCK.item(6)),
    OBSIDIAN_BENCH(98, 2331, MID_BUILD, 20652, new int[]{29276, 29277}, MARBLE_BLOCK.item(3), new Item(6573), Rune.FIRE.toItem(250), Rune.LAVA.toItem(500)),

    /**
     * Dungeon stuff
     */
    SPIKE_TRAP(72, 223, LOW_BUILD, 8143, 13356, COINS.item(50000)),
    MAN_TRAP(76, 273, LOW_BUILD, 8144, 13357, COINS.item(75000)),
    TANGLE_VINE(80, 316, LOW_BUILD, 8145, 13358, COINS.item(100000)),
    MARBLE_TRAP(84, 387, LOW_BUILD, 8146, 13359, COINS.item(150000)),
    TELEPORT_TRAP(88, 447, LOW_BUILD, 8147, 13360, COINS.item(200000)),

    OAK_DOOR(74, 600, MID_BUILD, 8122, new int[]{13344, 13345}, OAK_PLANK.item(10)),
    STEEL_PLATED_DOOR(84, 800, MID_BUILD, 8123, new int[]{13346, 13347}, OAK_PLANK.item(10), STEEL_BAR.item(10)),
    MARBLE_DOOR(94, 2000, MID_BUILD, 8124, new int[]{13348, 13349}, MARBLE_BLOCK.item(4)),

    WOODEN_CRATE(75, 143, MID_BUILD, 8148, 13283, REGULAR_PLANK.item(5), NAILS.item(5)),
    OAK_CHEST(79, 340, MID_BUILD, 8149, 13285, OAK_PLANK.item(5), STEEL_BAR.item(2)),
    TEAK_CHEST(83, 530, MID_BUILD, 8150, 13287, TEAK_PLANK.item(5), STEEL_BAR.item(4)),
    MAHOGANY_CHEST(87, 1000, MID_BUILD, 8151, 13289, MAHOGANY_PLANK.item(5), GOLD_LEAF.item(1)),
    MAGIC_CHEST(91, 1000, MID_BUILD, 8152, 13291, MAGIC_STONE.item(1)),

    DEMON(75, 707, -1, 8138, 13378, COINS.item(500_000)),
    KALPHITE_SOLDIER(80, 866, -1, 8139, 13374, COINS.item(750_000)),
    TOK_XIL(85, 2236, -1, 8140, 13377, COINS.item(5_000_000)),
    DAGANNOTH(90, 2738, -1, 8141, 13376, COINS.item(7_500_000)),
    STEEL_DRAGON(95, 3162, -1, 8142, 13375, COINS.item(10_000_000)),
    RUNE_DRAGON(99, 5000, -1, 21911, 31984, COINS.item(25_000_000)),

    /*
     * Achievement Gallery
     */
    ANCIENT_ALTAR(80, 1490, MID_BUILD, 20617, 29147, LIMESTONE_BRICK.item(10), MAGIC_STONE.item(1), new Item(20611), new Item(9050)),
    LUNAR_ALTAR(80, 1950, MID_BUILD, 20618, 29148, LIMESTONE_BRICK.item(10), MAGIC_STONE.item(1), new Item(20613), Rune.ASTRAL.toItem(10000)),
    DARK_ALTAR(80, 3888, MID_BUILD, 20619, 29149, LIMESTONE_BRICK.item(10), MAGIC_STONE.item(1), new Item(20615), Rune.BLOOD.toItem(5000), Rune.SOUL.toItem(5000)),
    OCCULT_ALTAR(90, 3445, MID_BUILD, 20620, 29150),
    OCCULT_ALTAR_FROM_ANCIENT(90, 3445, MID_BUILD, 20620, 29150, ANCIENT_ALTAR, Stream.concat(DARK_ALTAR.getMaterials().stream(), LUNAR_ALTAR.getMaterials().stream()).filter(item -> item.getId() != LIMESTONE_BRICK.getItemId() && item.getId() != MAGIC_STONE.getItemId()).toArray(Item[]::new)),
    OCCULT_ALTAR_FROM_LUNAR(90, 3445, MID_BUILD, 20620, 29150, LUNAR_ALTAR, Stream.concat(ANCIENT_ALTAR.getMaterials().stream(), DARK_ALTAR.getMaterials().stream()).filter(item -> item.getId() != LIMESTONE_BRICK.getItemId() && item.getId() != MAGIC_STONE.getItemId()).toArray(Item[]::new)),
    OCCULT_ALTAR_FROM_DARK(90, 3445, MID_BUILD, 20620, 29150, DARK_ALTAR, Stream.concat(ANCIENT_ALTAR.getMaterials().stream(), LUNAR_ALTAR.getMaterials().stream()).filter(item -> item.getId() != LIMESTONE_BRICK.getItemId() && item.getId() != MAGIC_STONE.getItemId()).toArray(Item[]::new)),

    MAHOGANY_ADVENTURE_LOG(83, 504, MID_BUILD, 20623, 29151, MAHOGANY_PLANK.item(3), new Item(970, 2), new Item(4155)),
    GILDED_ADVENTURE_LOG(88, 1100, MID_BUILD, 20624, 29152, MAHOGANY_PLANK.item(3), GOLD_LEAF.item(2), new Item(4155)),
    MARBLE_ADVENTURE_LOG(93, 1160, MID_BUILD, 20625, 29153, MARBLE_BLOCK.item(2), LIMESTONE_BRICK.item(4), new Item(4155)),

    BASIC_JEWELLERY_BOX(81, 605, MID_BUILD, 20626, 29154, BOLT_OF_CLOTH.item(1), STEEL_BAR.item(1), new Item(3853, 8), new Item(2552)),
    FANCY_JEWELLERY_BOX(86, 1350, MID_BUILD, 20627, 29155, BASIC_JEWELLERY_BOX, GOLD_LEAF.item(1), new Item(11105, 5), new Item(11118, 5)),
    ORNATE_JEWELLERY_BOX(91, 2680, MID_BUILD, 20628, 29156, FANCY_JEWELLERY_BOX, GOLD_LEAF.item(2), new Item(1712, 8), new Item(11980, 8)),

    BOSS_DISPLAY(87, 1483, MID_BUILD, 20629, 29157, MAHOGANY_PLANK.item(10), MOLTEN_GLASS.item(5), STEEL_BAR.item(4)),

    MOUNTED_EMBLEM(80, 5300, MID_BUILD, 20630, 29164, MARBLE_BLOCK.item(1), GOLD_LEAF.item(1), new Item(12756, 1)),
    MOUNTED_COINS(80, 800, MID_BUILD, 20631, 29165, MARBLE_BLOCK.item(1), GOLD_LEAF.item(1), COINS.item(100_000_000)),
    CAPE_HANGER(80, 800, MID_BUILD, 20632, 29166, MARBLE_BLOCK.item(1), GOLD_LEAF.item(1)),

    QUEST_LIST(80, 310, MID_BUILD, 20633, 29226, new Item(970, 10), GOLD_LEAF.item(1)),

    /*
     * Storage units - raids ONLY! not a house object
     */
    SMALL_STORAGE_UNIT(30, 150, MID_BUILD, 21037, 29770, MALLIGNUM_ROOT_PLANK.item(2)),
    MEDIUM_STORAGE_UNIT(60, 150, MID_BUILD, 21038, 29779, MALLIGNUM_ROOT_PLANK.item(4)),
    LARGE_STORAGE_UNIT(90, 150, MID_BUILD, 21039, 29780, MALLIGNUM_ROOT_PLANK.item(6)),

    ;

    Buildable(int levelReq, double xp, int animation, int itemId, int[] builtObjects, Item... materials) {
        this(levelReq, xp, animation, itemId, builtObjects, null, materials);
    }

    Buildable(int levelReq, double xp, int animation, int itemId, int[] builtObjects, Buildable upgradeFrom, Item... materials) {
        this.levelReq = levelReq;
        this.animation = animation;
        this.itemId = itemId;
        this.builtObjects = builtObjects;
        this.upgradeFrom = upgradeFrom;
        this.materials = Arrays.stream(materials).collect(Collectors.toList());
        this.requireTools = animation != -1 && AnimDef.get(animation).rightHandItem == (Tool.HAMMER + 512);
        this.xp = xp;
        StringBuilder sb = new StringBuilder();
        sb.append(ItemDef.get(itemId).name);
        sb.append("|");
        for (int i = 0; i < 4; i++) {
            if (i < this.materials.size()) {
                sb.append(this.materials.get(i).getId() == 4819 ? "Nails" : ItemDef.get(this.materials.get(i).getId()).name);
                sb.append(": ");
                sb.append(NumberUtils.formatNumber(this.materials.get(i).getAmount()));
            }
            sb.append("<br>");
        }
        creationMenuString = sb.toString();
    }

    Buildable(int levelReq, double xp, int animation, int itemId, int built, Item... materials) {
        this(levelReq, xp, animation, itemId, new int[]{built}, null, materials);
    }

    Buildable(int levelReq, double xp, int animation, int itemId, int built, Buildable upgradeFrom, Item... materials) {
        this(levelReq, xp, animation, itemId, new int[]{built}, upgradeFrom, materials);
    }


    private final int levelReq;
    private final int itemId; // item id of built object, this is shown in the build interface
    private final int[] builtObjects; // this is an array because some objects (like rugs) are composed of multiple different objects
    private final List<Item> materials;
    private final boolean requireTools;
    private final int animation;
    private final double xp;
    private final Buildable upgradeFrom;

    private Predicate<Player> buildTest;

    private BiPredicate<Player, Room> removeTest;

    public int getLevelReq() {
        return levelReq;
    }

    public int getItemId() {
        return itemId;
    }

    public int[] getBuiltObjects() {
        return builtObjects;
    }

    public List<Item> getMaterials() {
        return materials;
    }

    public boolean isRequireTools() {
        return requireTools;
    }

    public String getCreationMenuString() {
        return creationMenuString;
    }

    private String creationMenuString;

    public boolean hasLevelAndMaterials(Player player) {
        return Construction.getEffectiveLevel(player, this) >= getLevelReq() && hasAllMaterials(player) && hasTools(player);
    }

    public boolean hasAllMaterials(Player player) {
        return player.isAdmin() || materials.stream().allMatch(item -> Material.hasMaterial(player, item));
    }

    public void removeMaterials(Player player) {
        materials.forEach(item -> Material.removeMaterial(player, item));
    }

    public boolean hasTools(Player player) {
        return !isRequireTools()
                || (player.getInventory().contains(Tool.HAMMER, 1) && (player.getInventory().contains(Tool.SAW, 1) || player.getInventory().contains(Tool.CRYSTAL_SAW, 1)));
    }

    public boolean canBuild(Player player) {
        return buildTest == null || buildTest.test(player);
    }

    public boolean canRemove(Player player, Room room) {
        return getRemoveTest() == null || getRemoveTest().test(player, room);
    }

    public void setRemoveTest(BiPredicate<Player, Room> removeTest) {
        if (this.removeTest != null) {
            throw new IllegalStateException(name() + " already has a removeTest!");
        }
        this.removeTest = removeTest;
    }

    /**
     * constants for references
     */
    //parlour
    public static final Buildable[] PARLOUR_CHAIRS = {CRUDE_WOODEN_CHAIR, WOODEN_CHAIR, ROCKING_CHAIR, OAK_CHAIR, OAK_ARMCHAIR, TEAK_ARMCHAIR, MAHOGANY_ARMCHAIR};
    public static final Buildable[] RUGS = {BROWN_RUG, RUG, OPULENT_RUG};
    public static final Buildable[] BOOKCASES = {WOODEN_BOOKCASE, OAK_BOOKCASE, MAHOGANY_BOOKCASE};
    public static final Buildable[] FIREPLACES = {CLAY_FIREPLACE, STONE_FIREPLACE, MARBLE_FIREPLACE};
    public static final Buildable[] CURTAIN = {TORN_CURTAINS, CURTAINS, OPULENT_CURTAINS};

    //halls
    public static final List<Buildable> STAIRS = Arrays.asList(OAK_STAIRCASE_UP, OAK_STAIRCASE_DOWN, TEAK_STAIRCASE_UP, TEAK_STAIRCASE_DOWN, MARBLE_STAIRCASE_UP, MARBLE_STAIRCASE_DOWN, SPIRAL_STAIRCASE, MARBLE_SPIRAL_STAIRCASE);// place stairs here that have a prompt when building to choose up/down
    public static final Buildable[] HALL_STAIRS_UP = {HALL_RUG, HALL_OPULENT_RUG, OAK_STAIRCASE_UP, TEAK_STAIRCASE_UP, SPIRAL_STAIRCASE, MARBLE_STAIRCASE_UP, MARBLE_SPIRAL_STAIRCASE};
    public static final Buildable[] HALL_STAIRS_DOWN = {HALL_RUG, HALL_OPULENT_RUG, OAK_STAIRCASE_DOWN, TEAK_STAIRCASE_DOWN, SPIRAL_STAIRCASE, MARBLE_STAIRCASE_DOWN, MARBLE_SPIRAL_STAIRCASE};

    //guards (dungeon)
    public static final Buildable[] GUARDS = {SKELETON_GUARD, GUARD_DOG, HOBGOBLIN, BABY_RED_DRAGON, HUGE_SPIDER, TROLL_GUARD, HELLHOUND};
    public static final Buildable[] DUNGEON_TRAPS = {SPIKE_TRAP, MAN_TRAP, TANGLE_VINE, MARBLE_TRAP, TELEPORT_TRAP};
    public static final Buildable[] DUNGEON_DOORS = {OAK_DOOR, STEEL_PLATED_DOOR, MARBLE_DOOR};
    public static final Buildable[] DUNGEON_LIGHTINGS = {CANDLES, TORCH, SKULL_TORCH};
    public static final Buildable[] DUNGEON_DECORATIONS = {DECORATIVE_BLOOD, DECORATIVE_PIPE, HANGING_SKELETON};

    public static void sendFurnitureCreation(Player player, Room room, int hotspotIndex, Buildable... buildables) {
        int count = 1;
        boolean allowHotkeys = true || player.isAdmin();
        player.openInterface(InterfaceType.MAIN, Interface.CONSTRUCTION_FURNITURE_CREATION);
        for (Buildable b : buildables)
            player.getPacketSender().sendClientScript(1404, "iiisi", count++, b.getItemId(), b.getLevelReq(), b.getCreationMenuString(), b.hasLevelAndMaterials(player) || player.isAdmin() ? 1 : 0);
        player.getPacketSender().sendClientScript(1406, "ii", count - 1, allowHotkeys ? 0 : 1);
        player.getPacketSender().sendAccessMask(458, 2, 1, count - 1, 1);
        player.getPacketSender().sendClientScript(2157, "");
        player.set("BUILD_INTER_ROOM", room);
        player.set("BUILD_INTER_INDEX", hotspotIndex);
        player.set("BUILD_INTER_BUILDABLES", buildables);
    }

    private static void build(Player player, int slot) {
        Room room = player.get("BUILD_INTER_ROOM");
        int index = player.get("BUILD_INTER_INDEX",-1);
        if (room == null || index == -1) {
            if (player.get("FLATPACK_SET") != null) {
                Flatpack.make(player, slot);
            } else if (ChambersOfXeric.isRaiding(player)) {
                RaidStorage.selectStorageToBuild(player, slot);
            }
            return;
        }
        Buildable[] array = player.get("BUILD_INTER_BUILDABLES");
        if (slot < 1 || slot > array.length)
            return;
        room.buildObject(player, index, array[slot - 1]);
    }

    public static boolean isStairs(Buildable b) {
        return STAIRS.contains(b);
    }

    public int getAnimation() {
        return animation;
    }

    public double getXP() {
        return xp;
    }

    static {
        InterfaceHandler.register(Interface.CONSTRUCTION_FURNITURE_CREATION, handler -> {
            handler.actions[2] = (SlotAction) Buildable::build;
            handler.closedAction = (player, integer) -> {
                player.remove("BUILD_INTER_ROOM");
                player.remove("BUILD_INTER_INDEX");
                player.remove("BUILD_INTER_BUILDABLES");
                player.remove("FLATPACK_SET");
                player.getPacketSender().sendClientScript(2158, "");
            };
        });
    }

    private static BiPredicate<Player, Room> returnItems(Item... items) {
        return (p, unused) -> {
            if (!p.getInventory().hasFreeSlots(items.length)) {
                p.dialogue(new MessageDialogue("You'll need at least " + items.length + " free inventory spaces to do that."));
                return false;
            }
            for (Item item : items)
                p.getInventory().add(item);
            return true;
        };
    }

    private static Predicate<Player> statCheck(StatType type, int levelReq) {
        return p -> p.getStats().check(type, levelReq, "build that");
    }

    static { // misc. requirements/item returns etc
        for (Buildable cw : Arrays.asList(CW_ARMOUR_1, CW_ARMOUR_2, CW_ARMOUR_3, RUNITE_ARMOUR, ADAMANTITE_ARMOUR, MITHRIL_ARMOUR)) {
            cw.setRemoveTest(returnItems(cw.getMaterials().stream().filter(i -> i.getId() != OAK_PLANK.getItemId()).toArray(Item[]::new)));
        }
        MITHRIL_ARMOUR.buildTest = p -> p.getStats().check(StatType.Smithing, 68, "build a mithril display");
        ADAMANTITE_ARMOUR.buildTest = p -> p.getStats().check(StatType.Smithing, 88, "build an adamantite display");
        RUNITE_ARMOUR.buildTest = p -> p.getStats().check(StatType.Smithing, 99, "build a runite display");
        RUNE_CASE_1.buildTest = statCheck(StatType.Runecrafting, 14);
        RUNE_CASE_2.buildTest = statCheck(StatType.Runecrafting, 44);
        RUNE_CASE_3.buildTest = statCheck(StatType.Runecrafting, 90);
        EXIT_PORTAL.setRemoveTest((p, room) -> {
            if (room.getHouse().getPortalCount() == 1) {
                p.dialogue(new MessageDialogue("Your house must have at least one exit portal."));
                return false;
            }
            room.getHouse().calculate();
            return true;
        });

        BEER_BARREL.buildTest = statCheck(StatType.Cooking, 5);
        ASGARNIAN_ALE_BARREL.buildTest = statCheck(StatType.Cooking, 24);
        GREENMANS_ALE_BARREL.buildTest = statCheck(StatType.Cooking, 29);
        DRAGON_BITTER_BARREL.buildTest = statCheck(StatType.Cooking, 39);
        CHEFS_DELIGHT_BARREL.buildTest = statCheck(StatType.Cooking, 44);
    }

    public Buildable getUpgradeFrom() {
        return upgradeFrom;
    }

    public BiPredicate<Player, Room> getRemoveTest() {
        return removeTest;
    }
}
